extends ../reference.pug

block documentation
  h1 Template inheritance

  p.
    Pug supports template inheritance via the #[code block] and #[code extends] keywords. A block is simply a "block"
    of Pug that may be replaced within a child template. This process is recursive.

  p.
    Pug blocks can provide default content if desired, however optional as shown below by #[code block scripts], #[code block content], and #[code block foot].

  p layout.pug
  +pug
    :pugsrc
      html
        head
          title My Site - \#{title}
          block scripts
            script(src='/jquery.js')
        body
          block content
          block foot
            #footer
              p some footer content

  p Now to extend the layout, simply create a new file and use the #[code extends] directive as shown below, giving the path. You may now define one or more blocks that will override the parent block content, note that here the #[code foot] block is #[em not] redefined and will output "some footer content".

  p In Pug v1, if no file extension is given, #[code .pug] is automatically appended to the path, but in Pug v2 this is behavior is removed.

  p page-a.pug
  +pug
    :pugsrc
      extends ./layout.pug

      block scripts
        script(src='/jquery.js')
        script(src='/pets.js')

      block content
        h1= title
        - var pets = ['cat', 'dog']
        each petName in pets
          include pet.pug

  p pet.pug
  +pug
    :pugsrc
      p= petName

  p.
    It's also possible to override a block to provide additional blocks, as shown in the following example where #[code content] now exposes a #[code sidebar] and #[code primary] block for overriding, or the child template could override #[code content] all together.

  p sub-layout.pug
  +pug
    :pugsrc
      extends ./layout.pug

      block content
        .sidebar
          block sidebar
            p nothing
        .primary
          block primary
            p nothing
  p page-b.pug
  +pug
    :pugsrc
      extends ./sub-layout.pug

      block content
        .sidebar
          block sidebar
            p nothing
        .primary
          block primary
            p nothing


  h2 Block append / prepend

  p Pug allows you to #[em replace] (default), #[em prepend], or #[em append] blocks. Suppose for example you have default scripts in a "head" block that you wish to utilize on #[em every] page, you might do this:

  +pug
    :pugsrc
      html
        head
          block head
            script(src='/vendor/jquery.js')
            script(src='/vendor/caustic.js')
        body
          block content

  p Now suppose you have a page of your application for a JavaScript game, you want some game related scripts as well as these defaults, you can simply #[code append] the block:

  +pug
    :pugsrc
      extends layout

      block append head
        script(src='/vendor/three.js')
        script(src='/game.js')

  p When using #[code block append] or #[code block prepend] the #[code block] is optional:

  +pug
    :pugsrc
      extends layout

      append head
        script(src='/vendor/three.js')
        script(src='/game.js')
